{"version":3,"sources":["components/List.js","components/PDF.js","components/DownloadButton.js","components/Chip.js","components/Header.js","components/Logo.js","components/Description.js","components/SimulationDropdown.js","components/Viewer.js","components/Simulation.js","components/Updates.js","components/Contact.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","resources/celeraLogo.jpg"],"names":["List","this","props","data","map","d","align","Component","pdfjs","GlobalWorkerOptions","workerSrc","version","PDF","state","numPages","pageNumber","file","chip","size","onDocumentLoadSuccess","setState","style","display","justifyContent","alignItems","onLoadSuccess","width","renderMode","DownloadButton","href","Chip","isDataFetched","count","fetch","match","params","name","then","res","json","chip_image","short_description","long_description","features","applications","components","chip_name","path","sections","undefined","view","current_view","prevProps","prevState","forceUpdate","Container","Row","Col","Nav","title","to","className","onClick","scrollToComponent","offset","duration","ref","section","toLowerCase","Header","products","Navbar","sticky","collapseOnSelect","expand","bg","variant","Brand","src","logo","height","alt","Toggle","aria-controls","Collapse","id","NavDropdown","About","description","simulations","Viewer","Object","keys","windowWidth","Simulation","sim","Updates","Contact","App","exact","component","Logo","render","key","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.ae9dee78.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.data.map(function (d) {\r\n          return <li align=\"left\">{d}</li>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n/* eslint-disable import/first */\r\nimport { pdfjs } from \"react-pdf\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default class PDF extends Component {\r\n  state = {\r\n    numPages: null,\r\n    pageNumber: 1,\r\n    file: `./${this.props.chip}/${this.props.file}.pdf`,\r\n    size: \"thumbnail\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      size: this.props.size,\r\n    });\r\n  }\r\n\r\n  onDocumentLoadSuccess = ({ numPages }) => {\r\n    this.setState({ numPages });\r\n  };\r\n\r\n  render() {\r\n    const { pageNumber } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Document\r\n          file={this.state.file}\r\n          onLoadSuccess={this.onDocumentLoadSuccess}\r\n        >\r\n          <Page\r\n            width={this.state.size}\r\n            pageNumber={pageNumber}\r\n            renderMode=\"svg\"\r\n          />\r\n        </Document>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class DownloadButton extends Component {\r\n    render() {\r\n        return (<a href={`./${this.props.chip}/${this.props.file}.pdf`}>Download pdf</a>)\r\n    }\r\n    // https://medium.com/yellowcode/download-api-files-with-react-fetch-393e4dae0d9e\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Row, Col, Container } from \"react-bootstrap\";\r\nimport List from \"./List\";\r\nimport PDF from \"./PDF\";\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport scrollToComponent from \"react-scroll-to-component\";\r\n\r\nexport default class Chip extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setState({\r\n      isDataFetched: false,\r\n      count: 0,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${this.props.match.params.name}/${this.props.match.params.name}.json`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          chip_image: data.chip_image,\r\n          short_description: data.short_description,\r\n          long_description: data.long_description,\r\n          features: data.features,\r\n          applications: data.applications,\r\n          components: data.components,\r\n          chip_name: this.props.match.params.name,\r\n          path: null,\r\n          isDataFetched: true,\r\n          sections: data.sections,\r\n        });\r\n        if (this.props.match.params.view !== undefined) {\r\n          this.setState({ current_view: this.props.match.params.view });\r\n        } else {\r\n          this.setState({ current_view: \"MODULEtop\" });\r\n        }\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.match.params.name !== this.props.match.params.name ||\r\n      prevProps.match.params.view !== this.props.match.params.view\r\n    ) {\r\n      this.forceUpdate();\r\n      this.setState({\r\n        name: this.props.match.params.name,\r\n        view: this.props.match.params.view,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isDataFetched) return null;\r\n    return (\r\n      <Container>\r\n        <h1> {this.state.chip_name} </h1>\r\n        <Row>\r\n          <Col>\r\n            {/* make this text wrapped */}\r\n            <h2> {this.state.short_description} </h2>\r\n            <p align=\"left\"> {this.state.long_description} </p>\r\n          </Col>\r\n          <Col>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Nav title=\"Show Larger\">\r\n                <Link\r\n                  to={`/product/${this.state.chip_name}/MODULEtop`}\r\n                  className=\"nav-link\"\r\n                  onClick={() => this.setState({ path: null })}\r\n                >\r\n                  Explore Schematic\r\n                </Link>\r\n              </Nav>\r\n            </div>\r\n            <PDF size=\"400\" chip={this.state.chip_name} file=\"application\" />\r\n            {this.state.sections.map((d) => {\r\n              return (\r\n                <button\r\n                  onClick={() =>\r\n                    scrollToComponent(this[d], {\r\n                      offset: -100,\r\n                      align: \"top\",\r\n                      duration: 500,\r\n                    })\r\n                  }\r\n                >\r\n                  Go To {d}\r\n                </button>\r\n              );\r\n            })}\r\n          </Col>\r\n        </Row>\r\n\r\n        {this.state.sections.map((d) => {\r\n          // if d is an image (this can be done with API call) then...\r\n          // return (\r\n          //   <section className={d} ref={(section) => { this[d] = section; }}>\r\n          //     <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          //       <Row>\r\n          //         <Col>\r\n          //           <h2> {d} </h2>\r\n          //           <PDF size=\"400\" chip={this.state.chip_name} file={this.state.d} />\r\n          //         </Col>\r\n          //       </Row>\r\n          //     </div>\r\n          //   </section>\r\n          // )\r\n          return (\r\n            <section\r\n              className={d}\r\n              ref={(section) => {\r\n                this[d] = section;\r\n              }}\r\n            >\r\n              {/* <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}> */}\r\n              <Row>\r\n                <Col>\r\n                  <h2 align=\"left\"> {d} </h2>\r\n                  <List data={this.state[d.toLowerCase()]} />\r\n                </Col>\r\n              </Row>\r\n              {/* </div> */}\r\n            </section>\r\n          );\r\n        })}\r\n        {/* TODO: fix this pdf */}\r\n        <DownloadButton chip={this.state.chip_name} file={\"datasheet\"} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport logo from \"../resources/celeraLogo.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // replace this with AJAX call to backend\r\n    let data = {\r\n      products: [\"Tokyo\", \"JUNO\", \"Yokahama\", \"Yokosuka\"],\r\n    };\r\n    this.state.products = data.products;\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar\r\n        sticky=\"top\"\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n      >\r\n        <Navbar.Brand href=\"/celeratechnologies.website\">\r\n          <img\r\n            src={logo}\r\n            width=\"80\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown title=\"Products\" id=\"collasible-nav-dropdown\">\r\n              {this.state.products.map(function (d) {\r\n                return (\r\n                  <Link to={`/product/${d}/`} className=\"nav-link\">\r\n                    {d}\r\n                  </Link>\r\n                );\r\n              })}\r\n            </NavDropdown>\r\n            <Link to=\"/updates\" className=\"nav-link\">\r\n              Release Updates\r\n            </Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Link to=\"/contact\" className=\"nav-link\">\r\n              Contact Us\r\n            </Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport logo from \"../resources/celeraLogo.jpg\";\r\n\r\nexport default class About extends Component {\r\n  state = {};\r\n\r\n  constructor() {\r\n    super();\r\n    this.setState({ isDataFetched: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // make call to get logo\r\n    this.setState({ isDataFetched: true });\r\n  }\r\n  render() {\r\n    if (!this.state.isDataFetched) return null;\r\n    return <img src={logo} alt=\"Logo\" />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    if (this.props.current_view === \"MODULEtop\") return null;\r\n    else\r\n      return (\r\n        <div>\r\n          <p align=\"center\">\r\n            {\" \"}\r\n            {this.props.data[this.props.current_view].description}{\" \"}\r\n          </p>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nexport default class List extends Component {\r\n  render() {\r\n    if (this.props.current_view === \"MODULEtop\") return null;\r\n    else\r\n      return (\r\n        <NavDropdown title=\"Go to simulation\" id=\"basic-nav-dropdown\">\r\n          {this.props.data[this.props.current_view].simulations.map((d) => {\r\n            return (\r\n              <Link\r\n                to={`/product/${this.props.chip_name}/${this.props.current_view}/${d}`}\r\n                className=\"nav-link\"\r\n                onClick={() => this.setState({ path: d })}\r\n              >\r\n                {d}\r\n              </Link>\r\n            );\r\n          })}\r\n        </NavDropdown>\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Container, NavDropdown } from \"react-bootstrap\";\r\nimport PDF from \"./PDF\";\r\nimport Description from \"./Description\";\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport SimulationDropdown from \"./SimulationDropdown\";\r\n\r\nexport default class Viewer extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setState({\r\n      isDataFetched: false,\r\n      count: 0,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${this.props.match.params.name}/${this.props.match.params.name}.json`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ current_view: this.props.match.params.view });\r\n        this.setState({\r\n          chip_image: data.chip_image,\r\n          short_description: data.short_description,\r\n          long_description: data.long_description,\r\n          features: data.features,\r\n          applications: data.applications,\r\n          components: data.components,\r\n          chip_name: this.props.match.params.name,\r\n          path: null,\r\n          isDataFetched: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.match.params.name !== this.props.match.params.name ||\r\n      prevProps.match.params.view !== this.props.match.params.view\r\n    ) {\r\n      this.forceUpdate();\r\n      this.setState({\r\n        name: this.props.match.params.name,\r\n        view: this.props.match.params.view,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isDataFetched) return null;\r\n    return (\r\n      <Container>\r\n        <h1> {this.state.chip_name} Viewer </h1>\r\n        <p>Currently at {this.state.current_view}</p>\r\n        <Description\r\n          data={this.state.components}\r\n          current_view={this.state.current_view}\r\n        />\r\n        {/* get the image */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Row>\r\n            <NavDropdown title=\"Go to different view\" id=\"basic-nav-dropdown\">\r\n              <Link\r\n                to={`/product/${this.state.chip_name}/MODULEtop`}\r\n                className=\"nav-link\"\r\n                onClick={() => this.setState({ path: null })}\r\n              >\r\n                top\r\n              </Link>\r\n              {/* {Object.keys(() => this.state.path ? this.state.components[this.state.path] : this.state.components).map((d) => { */}\r\n              {Object.keys(this.state.components).map((d) => {\r\n                return (\r\n                  <Link\r\n                    to={`/product/${this.state.chip_name}/${d}`}\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.setState({ path: d })}\r\n                  >\r\n                    {d}\r\n                  </Link>\r\n                );\r\n              })}\r\n            </NavDropdown>\r\n            <Link\r\n              to={`/product/${this.state.chip_name}`}\r\n              className=\"nav-link\"\r\n              onClick={() => this.setState({ path: null })}\r\n            >\r\n              Go back to datasheet\r\n            </Link>\r\n            <SimulationDropdown\r\n              chip_name={this.state.chip_name}\r\n              data={this.state.components}\r\n              current_view={this.state.current_view}\r\n            />\r\n          </Row>\r\n        </div>\r\n\r\n        {/* Link to clickable tree viewer https://reactjsexample.com/a-simple-react-tree-menu-component/ */}\r\n        <PDF\r\n          size={this.props.windowWidth}\r\n          chip={this.state.chip_name}\r\n          file={this.state.current_view}\r\n        />\r\n        <DownloadButton chip={this.state.chip_name} file={\"MODULEtop\"} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Row, Col, Container } from \"react-bootstrap\";\r\nimport PDF from \"./PDF\";\r\nimport DownloadButton from \"./DownloadButton\";\r\n\r\nexport default class Simulation extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setState({\r\n      isDataFetched: false,\r\n      count: 0,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${this.props.match.params.name}/${this.props.match.params.name}.json`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          chip_image: data.chip_image,\r\n          short_description: data.short_description,\r\n          long_description: data.long_description,\r\n          features: data.features,\r\n          applications: data.applications,\r\n          components: data.components,\r\n          chip_name: this.props.match.params.name,\r\n          path: null,\r\n          isDataFetched: true,\r\n          sections: data.sections,\r\n        });\r\n        if (this.props.match.params.view !== undefined) {\r\n          this.setState({ current_view: this.props.match.params.view });\r\n        } else {\r\n          this.setState({ current_view: \"MODULEtop\" });\r\n        }\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.match.params.name !== this.props.match.params.name ||\r\n      prevProps.match.params.view !== this.props.match.params.view\r\n    ) {\r\n      this.forceUpdate();\r\n      this.setState({\r\n        name: this.props.match.params.name,\r\n        view: this.props.match.params.view,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isDataFetched) return null;\r\n    return (\r\n      <Container>\r\n        <h1> {this.state.chip_name} Simulation </h1>\r\n        <Row>\r\n          <Col>\r\n            <Nav title=\"Return to viewer\">\r\n              <Link\r\n                to={`/product/${this.state.chip_name}/${this.state.current_view}`}\r\n                className=\"nav-link\"\r\n                onClick={() => this.setState({ path: null })}\r\n              >\r\n                Go back to viewer\r\n              </Link>\r\n            </Nav>\r\n          </Col>\r\n        </Row>\r\n        {/* <PDF size={this.props.windowWidth} chip={this.state.chip_name} file={`sim_Tokyo-${this.state.current_view}_graph`}/> */}\r\n        <PDF\r\n          size={this.props.windowWidth}\r\n          chip={this.state.chip_name}\r\n          file={this.props.match.params.sim}\r\n        />\r\n\r\n        <DownloadButton chip={this.state.chip_name} file={this.props.match.params.sim} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default class Updates extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h3>This is the updates page</h3>\r\n\r\n        <h6> Version 1</h6>\r\n        <p>....</p>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2>Contact us</h2>\r\n        <Row>\r\n          <Col>\r\n            <h3>Who</h3>\r\n            <p>\r\n              We are a team of accomplished technology professionals with deep\r\n              experience in semiconductors, software, systems, development\r\n              tools. A common desire to re-think and re-build methods of\r\n              semiconductor R&D brought us together. We are driven by a passion\r\n              to transform our own industry.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Chip from \"./components/Chip\";\r\nimport Header from \"./components/Header\";\r\nimport Logo from \"./components/Logo\";\r\nimport Viewer from \"./components/Viewer\";\r\nimport Simulation from \"./components/Simulation\";\r\nimport Updates from \"./components/Updates\";\r\nimport Contact from \"./components/Contact\";\r\n\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Route exact path=\"/\" component={Logo} />\r\n          <Route path=\"/home\" component={Logo} />\r\n          <Route\r\n            exact\r\n            path=\"/product/:name/\"\r\n            render={(props) => (\r\n              <Chip key={props.match.params.name} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/product/:name/:view/\"\r\n            render={(props) => (\r\n              <Viewer key={props.match.params.view} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/product/:name/:view/:sim\"\r\n            render={(props) => (\r\n              <Simulation key={props.match.params.view} {...props} />\r\n            )}\r\n          />\r\n          <Route path=\"/updates\" component={Updates} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 49;","module.exports = __webpack_public_path__ + \"static/media/celeraLogo.791d60ce.jpg\";"],"sourceRoot":""}